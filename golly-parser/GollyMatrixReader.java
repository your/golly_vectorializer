import java.util.*;
import java.io.*;

public class GollyMatrixReader
{
    ArrayList<ArrayList<Integer>> manualMatrix;
    GollyRleConfiguration manualConfig;
    String manualFile;
    int manualMatrixRows;
    int manualMatrixCols;

    GollyMatrixReader(String file) throws IOException
    {
	this.manualMatrix = new ArrayList<ArrayList<Integer>>();
	this.manualConfig = new GollyRleConfiguration();
	this.manualFile = file;
	this.manualMatrixRows = 0;
	this.manualMatrixCols = 0;
	this.parseMatrixFile();
    }

    /*** Utilities ***/
    public void parseMatrixFile() throws IOException
    {
	// read in the data
	try
	    {
		Scanner inputMatrix = new Scanner(new File(manualFile));
		while(inputMatrix.hasNextLine())
		    {
			Scanner colReader = new Scanner(inputMatrix.nextLine());
			ArrayList<Integer> colMatrix = new ArrayList<Integer>();
                        manualMatrixCols = 0;
			while(colReader.hasNextInt())
			    {
				manualMatrixCols++;
				colMatrix.add(colReader.nextInt());
			    }
			manualMatrixRows++;
			manualMatrix.add(colMatrix);
		    }
		this.createConfig();
		//System.out.println(manualMatrix);
	    }
	catch (IOException e)
	    {
		System.out.println("Exception caught: " + e.getMessage());
	    }
    }

    public void createConfig()
    {
	manualConfig.setMatrixHeight(manualMatrixRows);
	manualConfig.setMatrixWidth(manualMatrixCols);
	manualConfig.initMatrix();
	for (List<Integer> list : this.manualMatrix)
	    {
		manualConfig.addMatrixRow();
		for (Integer i : list)
		    {
			manualConfig.addMatrixCell(i);
		    }
	    }
    }
 
  public boolean isManualMatrixEqual(GollyRleConfiguration autoGeneratedConfig)
  {
    boolean result = false;
    int autoGeneratedMatrixHeight = autoGeneratedConfig.getMatrixHeight();
    int autoGeneratedMatrixWidth = autoGeneratedConfig.getMatrixWidth();
    int manualMatrixHeight = manualConfig.getMatrixHeight();
    int manualMatrixWidth = manualConfig.getMatrixWidth();

    if (autoGeneratedMatrixHeight != manualMatrixHeight |
        autoGeneratedMatrixWidth != manualMatrixWidth)
    {
      result = false;
    }
    else
    {
      for (int i = 0; i < autoGeneratedMatrixHeight; i++)
      {
        for (int j = 0; j < autoGeneratedMatrixWidth; j++)
        {
          int autoGeneratedMatrixCell = autoGeneratedConfig.getCellState(i,j);
          int manualMatrixCell = manualConfig.getCellState(i,j);
          if (autoGeneratedMatrixCell != manualMatrixCell)
          {
            result = false;
            break;
          }
          else
          {
            result = true;
          }
        }
        if (result == false)
        {
          break;
        }
      }
    }
    return result;
  }
}
